PYTHON SCRIPT:

import pandas as pd
from sqlalchemy import create_engine

df_table_mapping = {
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\brands.csv": 'BRANDS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\categories.csv": 'CATEGORIES',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\customers.csv": 'CUSTOMERS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\order_items.csv": 'ORDER_ITEMS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\orders.csv": 'ORDERS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\products.csv": 'PRODUCTS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\staffs.csv": 'STAFFS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\stocks.csv": 'STOCKS',
    "C:\\BlueCloud\BIKE STORE PROJECT\\archive\\stores.csv": 'STORES',
}
    

server_name = 'BC-IN-HYD-DATA-\SQLEXPRESS01'
database_name = 'bike_store_database'
username = 'whrusername'
password = 'whrusername'

connection_string = f'mssql+pyodbc://{username}:{password}@{server_name}/{database_name}?driver=ODBC Driver 17 for SQL Server'
  
engine = create_engine(connection_string)

for df_key, table_name in df_table_mapping.items():
    df = pd.read_csv(f'{df_key}')  # Read the DataFrame from a CSV file
    df.to_sql(name=table_name, con=engine, if_exists='replace', index=False)
print("the program ended successfully.")


SNOWFLAKE SQL CODE:

CREATE OR REPLACE DATABASE BIKE_STORE_PROJECT;

CREATE OR REPLACE TABLE BIKE_STORE_PROJECT.PUBLIC.BRAND (
    brand_id INT PRIMARY KEY,
    brand_name STRING
);

CREATE OR REPLACE TABLE CATEGORIES (
    category_id INT PRIMARY KEY,
    category_name STRING
);

CREATE OR REPLACE TABLE CUSTOMERS (
    customer_id INT PRIMARY KEY,
    first_name STRING,
    last_name STRING,
    phone STRING,
    email STRING,
    street STRING,
    city STRING,
    state STRING,
    zip_code INT
);

CREATE OR REPLACE TABLE ORDER_ITEMS (
    order_id INT NOT NULL,
    item_id INT NOT NULL,
    product_id INT,
    quantity INT,
    list_price DECIMAL(10, 2),
    discount DECIMAL(5, 2),
    PRIMARY KEY (order_id, item_id)
);

CREATE OR REPLACE TABLE ORDERS (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_status STRING,
    order_date STRING,
    required_date STRING,
    shipped_date STRING,
    store_id INT,
    staff_id INT
);


CREATE OR REPLACE TABLE PRODUCTS (
    product_id INT PRIMARY KEY,
    product_name STRING,
    brand_id INT,
    category_id INT,
    model_year INT,
    list_price DECIMAL(10, 2)
);


CREATE OR REPLACE TABLE STAFFS (
    staff_id INT PRIMARY KEY,
    first_name STRING,
    last_name STRING,
    email STRING,
    phone STRING,
    active INT,
    store_id INT,
    manager_id INT
);


CREATE OR REPLACE TABLE STOCKS (
    store_id INT,
    product_id INT,
    quantity INT,
    PRIMARY KEY (store_id, product_id)
);

CREATE OR REPLACE TABLE STORES (
    store_id INT PRIMARY KEY,
    store_name STRING,
    phone STRING,
    email STRING,
    street STRING,
    city STRING,
    state STRING,
    zip_code INT
);



CREATE OR REPLACE STAGE STG
URL = 'azure://whrprojectstorageaccount.blob.core.windows.net/projectcontainer'
CREDENTIALS = (AZURE_SAS_TOKEN = 'sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2023-10-03T20:12:51Z&st=2023-10-03T12:12:51Z&spr=https&sig=c7Fy9AC%2ByzMPBLECUis%2Bk%2BXUS4kekpdctGyOl36zdKU%3D');

LIST @STG;


COPY INTO BIKE_STORE_PROJECT.PUBLIC.STORES
FROM 'azure://whrprojectstorageaccount.blob.core.windows.net/projectcontainer/datatables/dbo_STORES.csv'
CREDENTIALS = (
    AZURE_SAS_TOKEN = 'sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2023-10-03T20:12:51Z&st=2023-10-03T12:12:51Z&spr=https&sig=c7Fy9AC%2ByzMPBLECUis%2Bk%2BXUS4kekpdctGyOl36zdKU%3D'
)
FILE_FORMAT = (
    TYPE = 'CSV',
    FIELD_DELIMITER=','
    SKIP_HEADER = 1
    
);


SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.BRAND;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.CATEGORIES;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.CUSTOMERS;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.ORDERS;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.ORDER_ITEMS;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.PRODUCTS;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.STAFFS;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.STOCKS;
SELECT * FROM BIKE_STORE_PROJECT.PUBLIC.STORES;

CREATE OR REPLACE TABLE NEW_ORDERS AS
SELECT
    order_id,
    customer_id,
    order_status,
    TO_DATE(REPLACE(order_date, '"', ''), 'YYYY-MM-DD') AS order_date,
    TO_DATE(REPLACE(required_date, '"', ''), 'YYYY-MM-DD') AS required_date,
    TO_DATE(REPLACE(shipped_date, '"', ''), 'YYYY-MM-DD') AS shipped_date,
    store_id,
    staff_id
FROM ORDERS;

SELECT * FROM NEW_ORDERS;

DROP TABLE BIKE_STORE_PROJECT.PUBLIC.ORDERS;

ALTER TABLE NEW_ORDERS
RENAME TO ORDERS;













